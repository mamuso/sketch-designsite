var com = com ? com : {};
com.mamuso = com.mamuso ? com.mamuso : {};

com.mamuso.builder = {
  // -------------------------------------------------------------------
  // Read the settings page
  // -------------------------------------------------------------------
  readSettings: function(scope) {
    var settingsPage = com.mamuso.tools.findObjectsByName("_settings", scope);
  
    if(settingsPage.count() == 1) {
      var page = settingsPage.firstObject(),
      layers = page.children();

      // Check if we have defined a primary color
      var primary = com.mamuso.tools.getColor(com.mamuso.tools.findObjectsByName("_primary", layers).firstObject());
      if (primary) { com.mamuso.config.primary = primary; }

      // Check if we have defined a secondary color
      var secondary = com.mamuso.tools.getColor(com.mamuso.tools.findObjectsByName("_secondary", layers).firstObject());
      if (secondary) { com.mamuso.config.secondary = secondary; }

      // Check if we have a logo, we will export it later
      var logo = com.mamuso.tools.findObjectsByName("_logo", layers);
      com.mamuso.config.logo = (logo.count() > 0) ? "true" : "";
    }
  },

  // -------------------------------------------------------------------
  // Export images and htmls
  // -------------------------------------------------------------------
  buildGuide: function(scope) {
    var menuObjects = com.mamuso.builder.getMenuElements(scope);

    // Loop through the pages to create the initial structure
    for (var i=0; i<scope.count(); i++) {
      var page = scope[i];
      var layers = page.children();
      var artboards = page.artboards().reversedArray();
      var pageVariables = {};
      pageVariables.menu = menuObjects;
      pageVariables.logo = com.mamuso.config.logo;

      // Changing page, or we will not export a damn thing
      com.mamuso.config.doc.setCurrentPage(page);

      // Special case for settings
      if(page.name() == "_settings" && com.mamuso.config.logo) {

        // export the logo
        logo = com.mamuso.tools.findObjectsByName("_logo", artboards).firstObject();
        logoFilename = com.mamuso.config.basePath.stringByAppendingPathComponent("assets/logo.png");
        com.mamuso.tools.sliceAndExport(logo, logoFilename);
      
      } else {

        // Ignore all pages starting with "_"
        if(!page.name().hasPrefix("_")) {

          // Set the first page
          if(!com.mamuso.config.firstPage) {
            com.mamuso.config.firstPage = com.mamuso.builder.getPagePath(page.name());
          }

          pageVariables.title = page.name();
          pageVariables.active = com.mamuso.builder.getArtboardId(page.name(), page.name());
          pageVariables.artboards = [];

          // Do we have a preface?
          prefaceLayer = com.mamuso.tools.findObjectsByName("_preface", layers).firstObject();
          if(prefaceLayer && prefaceLayer.class() == "MSTextLayer"){
            pageVariables.preface = com.mamuso.tools.markdownToHTML(prefaceLayer.stringValue());
          }

          // Loop through the artboards of the page
          for (var j=0; j<artboards.count(); j++) {
            var artboard = artboards[j];
            var artboardTitle = artboard.name().hasPrefix("_") ? "" : artboard.name();
            var artboardTitleLevel = 2;

            if(artboard.name().hasPrefix("/") && artboard.name().length() > 1) {
              log("wadus")
              artboardTitleLevel = 3;
              artboardTitle = artboard.name().substringFromIndex(1);
            }
            var artboardId = com.mamuso.builder.getArtboardId(page.name(), artboard.name());
            var artboardHtmlText = "";

            // Export the image
            filename = artboardId + ".png";
            filePath = com.mamuso.config.basePath.stringByAppendingPathComponent("img").stringByAppendingPathComponent(filename);
            com.mamuso.tools.sliceAndExport(artboard, filePath);

            // Try to find the text layer
            var artboardText = com.mamuso.tools.findObjectsByName(artboard.name() + "_bodytext", layers).firstObject();
            if(artboardText && artboardText.class() == "MSTextLayer"){
              artboardHtmlText = com.mamuso.tools.markdownToHTML(artboardText.stringValue());
            }

            pageVariables.artboards.push({
              id: artboardId,
              title: artboardTitle,
              titlelevel: artboardTitleLevel,
              text: artboardHtmlText,
              image: "img/" + filename
            })
          }

          // Let's writhe the htmls :)
          var pageTemplatePath = com.mamuso.config.templatePath.stringByAppendingPathComponent("Page.mustache");
          var htmlName = com.mamuso.builder.getPagePath(page.name());
          var mustacheTemplate = [GRMustacheTemplate templateFromContentsOfFile:pageTemplatePath error:null];
          var mustacheTemplateContent = [mustacheTemplate renderObject:pageVariables error:null];
          
          mustacheTemplateContent.writeToFile_atomically_encoding_error(com.mamuso.config.basePath.stringByAppendingPathComponent(htmlName), true, NSUTF8StringEncoding, null);
        }
      }
    }

    // Set the CSS
    com.mamuso.builder.setCSS();

    // Set the index Page
    com.mamuso.builder.setIndex();
  },

  // -------------------------------------------------------------------
  // Set CSS file
  // -------------------------------------------------------------------
  setCSS: function() {
    var assetsPath = com.mamuso.config.basePath.stringByAppendingPathComponent("assets");

    if(!NSFileManager.defaultManager().fileExistsAtPath(assetsPath)){
      NSFileManager.defaultManager().createDirectoryAtPath_withIntermediateDirectories_attributes_error(assetsPath, false, null, null);
    }
 
    var cssVariables = {
      primary: com.mamuso.config.primary,
      secondary: com.mamuso.config.secondary
    };
    var cssTemplatePath = com.mamuso.config.templatePath.stringByAppendingPathComponent("CSSMain.mustache");
    var mustacheTemplate = [GRMustacheTemplate templateFromContentsOfFile:cssTemplatePath error:null];
    var mustacheTemplateContent = [mustacheTemplate renderObject:cssVariables error:null];

    mustacheTemplateContent.writeToFile_atomically_encoding_error(assetsPath.stringByAppendingPathComponent("style.css"), true, NSUTF8StringEncoding, null);
  },

  // -------------------------------------------------------------------
  // Set index.html file
  // -------------------------------------------------------------------
  setIndex: function() {
    var pageVariables = {
      page: com.mamuso.config.firstPage
    };
    var indexTemplatePath = com.mamuso.config.templatePath.stringByAppendingPathComponent("Index.mustache");
    var mustacheTemplate = [GRMustacheTemplate templateFromContentsOfFile:indexTemplatePath error:null];
    var mustacheTemplateContent = [mustacheTemplate renderObject:pageVariables error:null];

    mustacheTemplateContent.writeToFile_atomically_encoding_error(com.mamuso.config.basePath.stringByAppendingPathComponent("index.html"), true, NSUTF8StringEncoding, null);
  },


  // -------------------------------------------------------------------
  // Get Menu Objects
  // -------------------------------------------------------------------
  getMenuElements: function(pages) {
    var objects = [];

    for (var i=0; i<pages.count(); i++) {
      var page = pages[i];
      if(!page.name().hasPrefix("_")) {
        var subobjects = [];
        var pagePath = com.mamuso.builder.getPagePath(page.name());
        var artboards = page.artboards().reversedArray();

        for (var j=0; j<artboards.count(); j++) {
          var artboard = artboards[j];
          if(!artboard.name().hasPrefix("_")) {

            var artboardTitle = artboard.name();
            var classname = "";
            if(artboard.name().hasPrefix("/") && artboard.name().length() > 1) {
              classname = "sub";
              artboardTitle = artboard.name().substringFromIndex(1);
            }

            var artboardId = com.mamuso.builder.getArtboardId(page.name(), artboard.name());
            subobjects.push({
              name: artboardTitle,
              classname: classname,
              url: pagePath + "#" + artboardId
            });
          }
        }

        objects.push({
          name: page.name(),
          id: com.mamuso.builder.getArtboardId(page.name(), page.name()),
          url: pagePath,
          artboards: subobjects
        });
      }
    }
    return objects;
  },

  // -------------------------------------------------------------------
  // Page Path
  // -------------------------------------------------------------------
  getPagePath: function(pageName) {
    return pageName.stringByReplacingOccurrencesOfString_withString(" ", "_") + ".html";
  },

  // -------------------------------------------------------------------
  // Artboard ID
  // -------------------------------------------------------------------
  getArtboardId: function(pageName, artboardName) {
    return pageName.stringByReplacingOccurrencesOfString_withString(" ", "_").lowercaseString() + "-" + artboardName.stringByReplacingOccurrencesOfString_withString(" ", "_").lowercaseString();
  }

};